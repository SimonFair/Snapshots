Title="Edit Settings"
---
<?php
/* 
 * Copyright 2020 -	Simon Fairweather
 *
 *  Based on original code from Guilherme Jardim and Dan Landon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */

$plugin = "snapshots";
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
$translations = file_exists("$docroot/webGui/include/Translations.php");
require_once "$docroot/plugins/$plugin/include/Legacy.php";
?>
<?if (! $translations):?>
<?eval('?>'.parse_file("$docroot/plugins/$plugin/SnapshotEditSettings.page"))?>
<?else:?>
<?
require_once("plugins/{$plugin}/include/lib.php");
require_once "$docroot/plugins/dynamix.vm.manager/include/libvirt_helpers.php";



function safe_filename($string) {
	$string = preg_replace('~[^0-9a-z -_]~i', '', $string);
	/* Remove special characters from file name */
	$string = str_replace( array("(", ")", "$"), "", $string);
	return preg_replace('~[ ]~i', '_', $string);
}

$disabled = "";
$background = "checked";
$default_file = safe_filename("/boot/config/plugins/{$plugin}/".urldecode($_GET['s'])).".sh";

if (isset($_GET['s'])) {
	$serial = $_GET['s'];
	$vm = $_GET['v'];
	$isflash = $_GET['f'];
	$width = "50%";
	$autoconnect = (is_autoconnect($serial)) ? "checked" : "";
	$autoconnectstart = (is_autoconnectstart($serial)) ? "checked" : ""; 
		if (($file) && (! file_exists($file))) {
		set_config($serial,"command.{$partition}","");
		$file = "";
	}
	$file = get_vm_config($serial,"command");
	if (($file) && (! file_exists($file))) {
		set_vm_mapping($serial,"command","");
		$file = "";
	}
	$user_file = get_vm_config($serial,"user_command");
	if ((($user_file) && (! file_exists($user_file))) || (($user_file) && (! $file))) {
		set_vm_mapping($serial,"user_command","");
		$user_file = "";
	}
	$background = (get_vm_config($serial,"command_bg") != "false" ) ? "checked" : "";
	$background_action = "background";
}
if (substr($serial,0 , 5) == "Port:") {
	$edittype="Edit Settings for USB Port" ;
	$filename = "Port_".substr($serial,5) ;
 } else {
	 $edittype="Edit Settings for USB Device" ;
	 $filename=$serial ;
 }

if ((! file_exists($file)) || (! is_dir("/boot/config/plugins/user.scripts/scripts/"))) {
	$disabled = "disabled";
}

?>

<script type="text/javascript" src="<?autov('/webGui/javascript/jquery.switchbutton.js')?>"></script>
<script type="text/javascript" src="<?autov('/webGui/javascript/jquery.filetree.js')?>"></script>
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.ui.css')?>">
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.switchbutton.css')?>">
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.filetree.css')?>" >

<script type="text/javascript" src="<?autov('/plugins/'.$plugin.'/assets/arrive.min.js')?>"></script>

<link type="text/css" rel="stylesheet" href="<?autov("/webGui/styles/jquery.filetree.css")?>">
<script src="<?autov("/webGui/javascript/jquery.filetree.js")?>"></script>

<script>
$(function(){
  $("#fiodestinationShare").fileTreeAttach();
});

function path_selected() {
  var share = $("#fiotdestinationShare").val();
  document.getElementById("fiopathfromjs").value = share;
}
</script>



<style type="text/css">
	.fileTree {
		border: solid 1px #BBB;
		background: #FFF;
		overflow: scroll;
		padding: 5px;
		position:absolute;
		z-index:100;
		display:none;
		color:initial;
	}
</style>

<form markdown="1" name="edit_settings" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#include" value="/webGui/include/update.file.php"> 
<strong>_(SubVolume)_: </strong><?=$serial;?> 

<?if (! $isflash):?>
<table style='width: <?=$width;?>;' class='usb_disks'><thead><tr><td></td><td></td><td></td><td></td></tr></thead>
<tr>
&nbsp;

<!-- <td title='_(Turn on to Auto Connect to VM if USB Device is Added)_.'><input type='checkbox' class='autoconnect-switch'></td> -->
<!-- <td title='_(Turn on to Auto Connect to VM if VM is started)_.'><input type='checkbox' class='autoconnectstart-switch'></td> -->
</tr>
</table>
<td><b>Snapshot Prefix</b></td>
        <input id="pathfromjs" name="fiopathfromjs" type="hidden"></input>
        <input type='text' size="15" class='setting' id="prefix" placeholder="/mnt/user/" name="sharefolder" data-pickroot="/mnt/user" data-pickfilter="HIDE_FILES_FILTER" data-pickfolders="true" onchange="path_selected()" required>
    </td>


<td><b>Send to location</b></td>
        <input id="pathfromjs" name="fiopathfromjs" type="hidden"></input>
        <input type='text' size="15" class='setting' id="fiodestinationShare" placeholder="/mnt/user/" name="sharefolder" data-pickroot="/mnt/user" data-pickfilter="HIDE_FILES_FILTER" data-pickfolders="true" onchange="path_selected()" required>
    </td>



<?endif;?>


</form>




<script>
	var SNAPURL		= '/plugins/<?=$plugin;?>/include/snapshots.php';




	$('.autoconnect-switch').switchButton({ labels_placement: "left", on_label: "<?=_('Auto Connect at USB Device Plugin');?>", off_label: "<?=_('Auto Connect at USB Device Plugin');?>", checked:"<?=$autoconnect;?>" });
	$('.autoconnect-switch').change(function()
	{
		$.post(SNAPURL,{action:"autoconnect",serial:"<?=$serial;?>",status:$(this).is(":checked")},function(data)
		{
			$(this).prop("checked",data.result);
		},"json");
	});

	$('.autoconnectstart-switch').switchButton({ labels_placement: "left", on_label: "<?=_('Auto Connect to VM at VM Start');?>", off_label: "<?=_('Auto Connect to VM at VM Start');?>", checked:"<?=$autoconnectstart;?>" });
	$('.autoconnectstart-switch').change(function()
	{
		$.post(SNAPURL,{action:"autoconnectstart",serial:"<?=$serial;?>",status:$(this).is(":checked")},function(data)
		{
			$(this).prop("checked",data.result);
		},"json");
	});

	
	$('#vmselection').change(function()
	{
		$.post(SNAPURL,{action:"updatevm",serial:"<?=$serial;?>",vmname:$(this).prop("value")},function(data)
		{
				
		},"json");
	});

	$('.background-switch').switchButton({ labels_placement: "left", on_label: "<?=_('Run in Background');?>", off_label: "<?=_('Run in Backround');?>", checked:"<?=$background;?>" });
	$('.background-switch').change(function()
	{
		$.post(SNAPURL,{action:"<?=$background_action;?>",serial:"<?=$serial;?>",status:$(this).is(":checked")},function(data)
		{
			$(this).prop("checked",data.result);
		},"json");
	});

	<?if (isset($_GET['s'])):?>
		$( "form" ).submit(function( event ) {
			$.post(SNAPURL,{action:"set_command",serial:"<?=$serial;?>",command:$("input[name='#file']").val(),user_command:$("input[name='#user_file']").val()},function(data){event.preventDefault()},"json");
		});
	<?endif;?>



</script>
<?endif;?>
