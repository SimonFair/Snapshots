Title="Edit Snap Schedule"
---
<?php
/* 
 * Copyright 2020 -	Simon Fairweather
 *
 *  Based on original code from Guilherme Jardim and Dan Landon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */

$plugin = "snapshots";
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
$translations = file_exists("$docroot/webGui/include/Translations.php");
require_once "$docroot/plugins/$plugin/include/Legacy.php";
require_once "$docroot/plugins/dynamix.vm.manager/include/libvirt_helpers.php";
?>
<?if (! $translations):?>
<?eval('?>'.parse_file("$docroot/plugins/$plugin/SnapshotSchedule.page"))?>
<?else:?>
<?
require_once("plugins/{$plugin}/include/lib.php");
$setup = true;

$_SESSION['availablevms'] = $lv->get_domains();
if (isset($_GET['s'])) {
	$serial = $_GET['s'];
	$width = "50%";
$subvolsch = get_subvol_schedule($serial);
#	$subvolsch=array() ;

#var_dump($serial) ;
#var_dump($subvolsch) ;
}


$cfg =  $subvolsch ;
$version = parse_ini_file("/etc/unraid-version");

if (count($_POST)) {
	if ($_POST['#apply'] == "_(Apply)_") {
		array_map(function($k, $v) use (&$cfg) { if($k[0] != "#") $cfg[$k] = $v; }, array_keys($_POST), $_POST );
		snap_manager_log("Updating snapshot settings...");
		set_subvol_schedule($serial, $cfg);
		snap_manager_log("snapshot settings updated.");
    #reload() ;
    $subvolsch = get_subvol_schedule($serial);
	} 
}

$cron = explode(' ',$subvolsch['snapschedule']);
$move = $cron[2]!='*' ? 3 : ($cron[4]!='*' ? 2 : (substr($cron[1],0,1)!='*' ? 1 : 0));
$mode = ['Hourly','Daily','Weekly','Monthly','Disabled'];
$days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];
?>



<script>
<? if ($setup == true):?>
$(function() {
  presetsnap(document.snap_schedule);
});
<? endif; ?>
// Fool Unraid by simulating the original input field
function preparesnap(form) {
  var mode = form.sharesnapSchedule.value;
  var min = mode!=0 ? form.min.value : 0;
  var hour = mode!=0 ? form.hour1.value : form.hour2.value;
  form.sharesnapSchedule.options[mode].value = min+' '+hour+' '+form.dotm.value+' * '+form.day.value;
  form.min.disabled = true;
  form.hour1.disabled = true;
  form.hour2.disabled = true;
  form.dotm.disabled = true;
  form.day.disabled = true;
}
function presetsnap(form) {
  var mode = form.sharesnapSchedule.value;
  form.min.disabled = false;
  form.day.disabled = mode!=2;
  form.dotm.disabled = mode!=3;
  form.day.value = form.day.disabled ? '*' : (form.day.value=='*' ? 0 : form.day.value);
  form.dotm.value = form.dotm.disabled ? '*' : (form.dotm.value=='*' ? 1 : form.dotm.value);
  if (mode==0) {$('#H1').hide(); $('#H2').show();} else {$('#H2').hide(); $('#H1').show();}
}

</script>
<form markdown="1" name="snap_schedule" method="POST">
<strong>_(SubVolume)_: </strong><?=$serial;?> 

<?if ($setup):?>
_(Snap schedule)_:
: <select name="sharesnapSchedule" onchange="presetsnap(this.form)">
  <?for ($m=0; $m<count($mode); $m++):?>
  <?=mk_option($move, strval($m), _($mode[$m]))?>
  <?endfor;?>
  </select>

:snap_schedule_help:

_(Day of the week)_:
: <select name="day">
  <?for ($d=0; $d<count($days); $d++):?>
  <?=mk_option($cron[4], strval($d), _($days[$d],0))?>
  <?endfor;?>
  <?=mk_option($cron[4], "*", "--------", "disabled")?>
  </select>

:snap_day_of_the_week_help:

_(Day of the month)_:
: <select name="dotm">
  <?for ($d=1; $d<=31; $d++):?>
  <?=mk_option($cron[2], strval($d), sprintf("%02d", $d))?>
  <?endfor;?>
  <?=mk_option($cron[2], "*", "--------", "disabled")?>
  </select>

:snap_day_of_the_month_help:

_(Time of the day)_:
: <span id="H1"<?if ($move==0):?> style="display:none"<?endif;?>><select name="hour1" class="narrow">
  <?for ($d=0; $d<=23; $d++):?>
  <?=mk_option($cron[1], strval($d), sprintf("%02d", $d))?>
  <?endfor;?>
  </select>
  <select name="min" class="narrow">
  <?for ($d=0; $d<=55; $d+=5):?>
  <?=mk_option($cron[0], strval($d), sprintf("%02d", $d))?>
  <?endfor;?>
  </select>&nbsp;&nbsp;_(HH:MM)_</span>
: <span id="H2"<?if ($move!=0):?> style="display:none"<?endif;?>><select name="hour2">
  <?=mk_option($cron[1], "*/1", _("Every hour"))?>
  <?=mk_option($cron[1], "*/2", _("Every 2 hours"))?>
  <?=mk_option($cron[1], "*/3", _("Every 3 hours"))?>
  <?=mk_option($cron[1], "*/4", _("Every 4 hours"))?>
  <?=mk_option($cron[1], "*/6", _("Every 6 hours"))?>
  <?=mk_option($cron[1], "*/8", _("Every 8 hours"))?>
  </select></span>

:snap_time_of_the_day_help:

_(Snap Schedule logging)_:
: <select name="snaplogging">
  <?=mk_option($subvolsch['snaplogging'], "yes", _("Enabled"))?>
  <?=mk_option($subvolsch['snaplogging'], "no", _("Disabled"))?>
  </select>
&nbsp;_( Function not implemented.)_
:snap_logging_help:

_(Snap Send )_:
: <select name="snapsend">
  <?=mk_option($subvolsch['snapsend'], "local", _("Local"))?>
  <?=mk_option($subvolsch['snapsend'], "no", _("Disabled"))?>
  <?=mk_option($subvolsch['snapsend'], "remote", _("Remote"))?>
  </select>
 &nbsp;_( Function not implemented.)_


 _(Remote Host)_:
: <input type="text" name="remotehost"  value="<?=$subvolsch['remotehost']?>" placeholder="Remote host ip/name" class="narrow"/>_(Function not implemented.)_

  _(Snap Send Incremental)_:
: <select name="snapincremental">
  <?=mk_option($subvolsch['snapincremental'], "yes", _("Yes"))?>
  <?=mk_option($subvolsch['snapincremental'], "no", _("No"))?>
  </select>
&nbsp;_( Function not implemented.)_

 
 _(Master Snap)_:
: <input type="text" name="mastersnap"  value="<?=$subvolsch['mastersnap']?>" placeholder="Previous" class="narrow"/> _(Function not implemented.)_



 Virtual Machine
:   <select id="vmselection" class="input.description" name="vmselection"   >
    <option value=""</option>
      <?php
	 	$output = $_SESSION['availablevms'];
	    
      foreach($output as $item){
		  
      if ($item === $vm) {
      echo "<option selected=\"selected\" value=\"$item\">$item</option>";
	  } else {
		 echo "<option  value=\"$item\">$item</option>"; 
	  }
}
?>
</select> 
&nbsp;_( Function not implemented.)_

_(VM options)_:

: <select id="hostshutdown" name="hostoption">
  <?=mk_option($subvolsch['hostoption'], 'shutdown', _('Shutdown VMs'))?>
  <?=mk_option($subvolsch['hostoption'], 'hibernate', _('Hibernate VMs'))?>
  <?=mk_option($subvolsch['hostoption'], 'suspend', _('Suspend VMs'))?>
  </select>
&nbsp;_( Function not implemented.)_

:vms_host_shutdown_help:

_(VM shutdown time-out)_:
: <input type="number" id="vm_shutdown_timeout" name="shutdowntimeout" value="<?=htmlspecialchars($domain_cfg['TIMEOUT'])?>" class="narrow">
  <?if (!empty($subvolsch['shutdowntimeout']) && !empty($subvolsch['shutdowntimeout']) && (int)$subvolsch['shutdowntimeout'] > (int)$var['shutdownTimeout']):?>
  <span id="arraystopped"><i class="fa fa-warning icon warning"></i> _(exceeds Disk Shutdown)_ <?=htmlspecialchars($var['shutdownTimeout'])?>s _(time-out)_ (<a href="/Settings/DiskSettings">_(edit)_</a>)</span>
  <?endif;?>
&nbsp;_( Function not implemented.)_

:vms_shutdown_timeout_help:

 _(Retention )_:

: <select name="Removal">
  <?=mk_option($subvolsch['snapremoval'], "yes", _("Enabled"))?>
  <?=mk_option($subvolsch['snapremoval'], "no", _("Disabled"))?>
  </select> &nbsp;_( Function not implemented.)_

   _(Days)_:
: <input type="text" name="days"  value="<?=$subvolsch['days']?>" placeholder="Days" class="narrow" />_(Function not implemented.)_

   _(Occurences)_:
: <input type="text" name="occurences" value="<?=$subvolsch['occurences']?>" placeholder="Number of" class="narrow" />_(Function not implemented.)_


_(Remove Snaps/Sends )_:
: <select name="snapsendopt">
  <?=mk_option($subvolsch['snapsendopt'], "local", _("Local"))?>
  <?=mk_option($subvolsch['snapsendopt'], "none", _("None"))?>
  <?=mk_option($subvolsch['snapsendopt'], "both", _("Both"))?>
  <?=mk_option($subvolsch['snapsendopt'], "remote", _("Remote"))?>
  </select>
&nbsp;_( Function not implemented.)_


<?endif;?>
&nbsp;
: <input type="submit" name="#apply" value='_(Apply)_'><input type="button" value="_(Done)_" onclick="done()">
</form>

<?endif;?>